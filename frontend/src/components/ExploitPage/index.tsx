import React, { useState } from 'react';
import { useFetchExploit, useDeleteExploit } from '../../actions/exploitActions';
import { useParams, useHistory } from 'react-router-dom';
import LoadingPage from '../LoadingPage';
import ErrorPage from '../ErrorPage';
import { Grid, List, ListItem, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';
import ReactPlayer from 'react-player';
import Markdown from 'react-markdown';
import { Storage, Delete, Edit } from '@material-ui/icons';
import { isLoggedIn } from '../../actions/authActions';

const ExploitPage: React.FC = () => {
    const { id } = useParams();
    const history = useHistory();
    const [deleteDialog, setDeleteDialog] = useState(false);
    const [exploit, loading, error] = useFetchExploit(id as string);
    const [exploitDeleted, deleteError, deleteExploit] = useDeleteExploit();

    if (exploitDeleted) {
        history.push('/search');

        return <LoadingPage />;
    }

    if (loading || !exploit) return <LoadingPage />;

    if (error || deleteError || !id) return <ErrorPage />;

    return (
        <>
            <Dialog
                open={deleteDialog}
                onClose={() => setDeleteDialog(false)}
            >
                <DialogTitle>
                    Delete {exploit.name}?
            </DialogTitle>
                <DialogContent>
                    You are about to delete {exploit.name}. This an irrevertable action. Do you wish to proceed?
            </DialogContent>
                <DialogActions>
                    <Button onClick={() => deleteExploit(id)}>Delete</Button>
                    <Button onClick={() => setDeleteDialog(false)}>Cancel</Button>
                </DialogActions>
            </Dialog>

            <Grid spacing={2} style={{ width: '100%', height: '100vh', paddingTop: '75px' }} container direction='column'>
                <Grid item container justify='center' xs>
                    <Grid item xs={5}>
                        <span style={{ fontWeight: 'bold', fontSize: '36px' }}>
                            {exploit.name}
                        </span>

                        <Markdown source={exploit.description} />
                    </Grid>
                    <Grid container direction='column' item xs={5}>
                        <Grid item>
                            <ReactPlayer url={exploit.video} />
                        </Grid>

                        <Grid item>
                            <List>
                                {
                                    (() => {
                                        if(exploit.sandbox && exploit.sandbox !== '') {
                                            return (
                                                <ListItem button onClick={() => {
                                                    history.push(exploit.sandbox as string)
                                                }}>
                                                    <Storage />
                                                    <Typography style={{ paddingLeft: '0.5em' }}>Sandbox</Typography>
                                                </ListItem>
                                            )
                                        }
                                    })()
                                }

                                {
                                    (() => {
                                        if(isLoggedIn()) {
                                            return <>
                                                <ListItem button onClick={() => {
                                                    history.push(`/editor/${id}`)
                                                }}>
                                                    <Edit />
                                                    <Typography style={{ paddingLeft: '0.5em' }}>Edit</Typography>
                                                </ListItem>
                
                                                <ListItem button onClick={() => setDeleteDialog(true)}>
                                                    <Delete />
                                                    <Typography style={{ paddingLeft: '0.5em' }}>Delete</Typography>
                                                </ListItem>
                                            </>
                                        }
                                    })()
                                }
                            </List>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </>
    )
}

export default ExploitPage;