import React, { useState } from 'react';
import { useQuery, useMutation } from '@apollo/react-hooks';
import { FETCH_EXPLOIT, DELETE_EXPLOIT } from '../../actions/exploitActions';
import { useParams, useHistory } from 'react-router-dom';
import LoadingPage from '../LoadingPage';
import ErrorPage from '../ErrorPage';
import { Grid, List, ListItem, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';
import ReactPlayer from 'react-player';
import Markdown from 'react-markdown';
import { Storage, TrendingUp, Delete, Edit } from '@material-ui/icons';

const ExploitPage: React.FC = () => {
    const { id } = useParams();
    const history = useHistory();
    const [deleteDialog, setDeleteDialog] = useState(false);

    const [deleteExploit, { loading, error, data }] = useMutation(DELETE_EXPLOIT, {
        variables: { id }
    });

    const fetch = useQuery(FETCH_EXPLOIT, {
        variables: { id }
    });

    if (data && data.deleteExploit) {
        history.push('/search');

        return <LoadingPage />;
    }

    if (loading || fetch.loading) return <LoadingPage />;

    if (error || fetch.error) return <ErrorPage />;

    return (
        <>
            <Dialog
                open={deleteDialog}
                onClose={() => setDeleteDialog(false)}
            >
                <DialogTitle>
                    Delete {fetch.data.exploit.name}?
            </DialogTitle>
                <DialogContent>
                    You are about to delete {fetch.data.exploit.name}. This an irrevertable action. Do you wish to proceed?
            </DialogContent>
                <DialogActions>
                    <Button onClick={() => deleteExploit({
                        variables: {
                            id
                        }
                    })}>Delete</Button>
                    <Button onClick={() => setDeleteDialog(false)}>Cancel</Button>
                </DialogActions>
            </Dialog>

            <Grid spacing={2} style={{ width: '100%', height: '100vh', paddingTop: '75px' }} container direction='column'>
                <Grid item container justify='center' xs>
                    <Grid item xs={5}>
                        <span style={{ fontWeight: 'bold', fontSize: '36px' }}>
                            {fetch.data.exploit.name}
                        </span>

                        <Markdown source={fetch.data.exploit.description} />
                    </Grid>
                    <Grid container direction='column' item xs={5}>
                        <Grid item>
                            <ReactPlayer url={fetch.data.exploit.video} />
                        </Grid>

                        <Grid item>
                            <List>
                                <ListItem button onClick={() => {
                                    history.push(fetch.data.exploit.sandbox)
                                }}>
                                    <Storage />
                                    <Typography style={{ paddingLeft: '0.5em' }}>Sandbox</Typography>
                                </ListItem>

                                <ListItem button onClick={() => {
                                    history.push(`/stats`)
                                }}>
                                    <TrendingUp />
                                    <Typography style={{ paddingLeft: '0.5em' }}>Statistics</Typography>
                                </ListItem>

                                <ListItem button onClick={() => {
                                    history.push(`/editor/${id}`)
                                }}>
                                    <Edit />
                                    <Typography style={{ paddingLeft: '0.5em' }}>Edit</Typography>
                                </ListItem>

                                <ListItem button onClick={() => setDeleteDialog(true)}>
                                    <Delete />
                                    <Typography style={{ paddingLeft: '0.5em' }}>Delete</Typography>
                                </ListItem>
                            </List>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </>
    )
}

export default ExploitPage;