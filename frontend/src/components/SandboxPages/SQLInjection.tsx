import React, { useState, useEffect } from 'react';
import { Grid, TextField, Button, Typography, Dialog, DialogTitle, DialogContent } from '@material-ui/core';
import CryptoJS from 'crypto-js';

function createDatabase(): any {
    //@ts-ignore
    const tdb = openDatabase('Users', '1.0', 'Users', 65536);

    tdb.transaction((tx: any) => {
        tx.executeSql('DROP TABLE IF EXISTS USERS');
        tx.executeSql('CREATE TABLE USERS (id unique, username, password)');
        tx.executeSql('INSERT INTO USERS (id, username, password) VALUES (1, "admin", "77cef6df87aab9e9790e40a9fef1b918")');
    });

    return tdb;
}

const SQLInjection: React.FC = () => {
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const [message, setMessage] = useState('');
    const [open, setOpen] = useState(false);
    const [db, setDb] = useState<any>();

    useEffect(() => {
        setDb(createDatabase());
    }, []);

    return (
        <>
            <Dialog
                open={open}
                onClose={() => setOpen(false)}
            >
                <DialogTitle>Status</DialogTitle>
                <DialogContent style={{ padding: '10px' }}>
                    <Typography>{message}</Typography>
                </DialogContent>
            </Dialog>
            <Grid container spacing={4} direction='column' alignItems='center' justify='center' style={{ width: '100%', height: '100vh', position: 'absolute' }}>
                <Grid item>
                    <Typography variant='h5'>SQLite Injection</Typography>
                </Grid>
                <Grid item>
                    <TextField value={username} onChange={(e) => setUsername(e.target.value)} label='Username' color='secondary' variant='outlined' />
                </Grid>
                <Grid item>
                    <TextField value={password} onChange={(e) => setPassword(e.target.value)} label='Password' color='secondary' variant='outlined' type='password' />
                </Grid>
                <Grid item>
                    <Button variant='outlined' onClick={async () => {
                        let md5Password = CryptoJS.MD5(password);

                        db.transaction((tx: any) => {
                            tx.executeSql(`SELECT id FROM USERS WHERE username='${username}' AND password='${md5Password}'`, [], (_: any, results: any) => {
                                if(results.rows.length > 0 && results.rows[0].id === 1) {
                                    setMessage("🎉 Login Successful 🎉");
                                } else {
                                    setMessage("❌ Wrong Password ❌");
                                }
                                
                                setOpen(true);
                            }, () => {
                                setMessage("😲 SQLite Error 😲");

                                setOpen(true);
                            });
                        });

                        setOpen(true);
                    }}>Login</Button>
                </Grid>
            </Grid>
        </>
    )
}

export default SQLInjection;