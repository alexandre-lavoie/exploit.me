import { useState, useEffect } from "react";
import firebase from "../firebase";

export function isLoggedIn() {
  return firebase.auth().currentUser !== null;
}

export function useLogin(): [
  boolean,
  boolean,
  boolean,
  (email: string, password: string) => void,
] {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(false);

  useEffect(() => {
    if (firebase.auth().currentUser) {
      setIsLoggedIn(true);
    }
  }, []);

  function login(email: string, password: string) {
    setError(false);
    setLoading(true);

    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).then(
      () => {
        firebase.auth().signInWithEmailAndPassword(email, password).then(
          () => {
            setIsLoggedIn(true);
            setLoading(false);
          },
        ).catch(() => {
          setError(true);
          setLoading(false);
        });
      },
    );
  }

  return [isLoggedIn, loading, error, login];
}

export function useCreateAccount(): [
  boolean,
  boolean,
  boolean,
  (email: string, password: string) => void,
] {
  const [created, setCreated] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(false);

  function createAccount(email: string, password: string) {
    setError(false);
    setLoading(true);

    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).then(
      () => {
        firebase.auth().createUserWithEmailAndPassword(email, password).then(
          () => {
            setCreated(true);
            setLoading(false);
          },
        ).catch((e) => {
          console.log(e);
          setError(true);
          setLoading(false);
        });
      },
    );
  }

  return [created, loading, error, createAccount];
}

export function useLogout(): [boolean, boolean, boolean, () => void] {
  const [isLogout, setIsLogout] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(false);

  function logout() {
    setLoading(true);

    firebase.auth().signOut().then(() => {
      setIsLogout(true);
      setLoading(false);
    }).catch(() => {
      setError(true);
      setLoading(false);
    });
  }

  return [isLogout, loading, error, logout];
}
