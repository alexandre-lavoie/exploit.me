import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import LandingPage from './components/LandingPage';
import SearchPage from './components/SearchPage';
import ExploitPage from './components/ExploitPage';
import ApolloClient from 'apollo-boost';
import { API_URL } from './constants';
import { ApolloProvider } from '@apollo/react-hooks';
import { createMuiTheme, CssBaseline } from '@material-ui/core';
import { ThemeProvider } from '@material-ui/styles';
import Header from './components/Header';
import LoadingPage from './components/LoadingPage';
import ErrorPage from './components/ErrorPage';
import EditorPage from './components/EditorPage';
import StatisticsPage from './components/StatisticsPage';
import SQLInjectionPage from './components/SQLInjectionPage';

const client = new ApolloClient({
    uri: API_URL + `/graphql`
});

const lightTheme = createMuiTheme({
    typography: {
        fontFamily: 'Montserrat'
    },
    palette: {
        primary: {
            main: '#ffffff'
        }
    }
})

const darkTheme = createMuiTheme({
    typography: {
        fontFamily: 'Montserrat'
    },
    palette: {
        type: 'dark',
    }
})

const App: React.FC = () => {

    const [isDark, setDark] = useState(false);

    useEffect(() => {
        const theme = localStorage.getItem('theme');

        if(theme === 'dark'){
            setDark(true);
        } else {
            setDark(false);
        }
    }, [])

    return (
        <ThemeProvider theme={(isDark) ? darkTheme : lightTheme}>
            <ApolloProvider client={client}>
                <CssBaseline />
                <Router>
                    <Header changeTheme={() => {
                        if(isDark === true){
                            localStorage.setItem('theme', 'light');
                        } else {
                            localStorage.setItem('theme', 'dark');
                        }
                        setDark(!isDark);
                    }} />
                    <Route path="/" exact component={LandingPage} />
                    <Route path="/search" component={SearchPage} />
                    <Route path="/exploit/:id" component={ExploitPage} />
                    <Route path="/editor" exact component={EditorPage} />
                    <Route path="/editor/:id" component={EditorPage} />
                    <Route path="/load" component={LoadingPage} />
                    <Route path="/error" component={ErrorPage} />
                    <Route path="/stats" component={StatisticsPage} />
                    <Route path="/sandbox/sql-injection" exact component={SQLInjectionPage} />
                </Router>
            </ApolloProvider>
        </ThemeProvider>
    );
}

export default App;